version: "2"
services:
  newsblur:
    container_name: newsblur
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: newsblur
    links:
      - mongo-nb
      - postgres-nb
      - elasticsearch-nb
      - redis-nb
    ports:
      - "8000:8000"
    networks:
      - proxy
      - newsblur

  postgres-nb:
    container_name: postgres-nb
    image: postgres:9
    environment:
      - POSTGRES_USER=newsblur
      - POSTGRES_PASSWORD=newsblur
    ports:
      - "5432:5432"
    volumes:
      - "/docker/newsblur/postgres/entrypoint:/docker-entrypoint-initdb.d"
      - "/docker/newsblur/postgres/data:/var/lib/postgresql/data"
    networks:
      - newsblur

  redis-nb:
    container_name: redis-nb
    image: redis:3
    ports:
      - "6379:6379"
    volumes:
      - "/docker/newsblur/redis/data:/data"
      - "/docker/newsblur/redis/redis.conf:/usr/local/etc/redis_server.conf"
      - "/docker/newsblur/redis/redis_server.conf:/etc/redis_server.conf"
      - "/docker/newsblur/redis/redis.var.lib:/var/lib/redis"
    command: /usr/local/bin/redis-server /usr/local/etc/redis_server.conf
    networks:
      - newsblur

  elasticsearch-nb:
    container_name: elasticsearch-nb
    image: elasticsearch:1.7
    ports:
      - "9200:9200"
    volumes:
      - "/docker/newsblur/elasticsearch:/usr/share/elasticsearch/data"
    networks:
      - newsblur

  mongo-nb:
    image: mongo:3.2
    ports:
      - "27017:27017"
    command: mongod --smallfiles
    volumes:
      - "/docker/newsblur/mongo:/data/db"
    networks:
      - newsblur

networks:
  proxy:
    external: true
  newsblur:
    driver: bridge
    ipam:
      driver: default
    internal: true
