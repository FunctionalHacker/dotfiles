[services.searx]
container_name = "searx"
image = "searxng/searxng"
restart = "unless-stopped"
networks = ["searx", "proxy"]
volumes = [
  "/docker/searx:/etc/searxng",
  #"/docker/searx/logo.png:/usr/local/searxng/searx/static/themes/simple/img/searxng.png:ro"
]
environment = ["SEARXNG_BASE_URL=https://search.korhonen.cc/"]
cap_drop = ["ALL"]
cap_add = ["CHOWN", "SETGID", "SETUID", "DAC_OVERRIDE"]
labels = [
  "traefik.enable=true",
  "traefik.docker.network=proxy",
  "traefik.http.routers.searx-redirect.entrypoints=http",
  "traefik.http.routers.searx-redirect.rule=Host(`search.korhonen.cc`)",
  "traefik.http.routers.searx-redirect.middlewares=http2https@file",
  "traefik.http.routers.searx.entrypoints=https",
  "traefik.http.routers.searx.middlewares=secHeaders@file,compress@file",
  "traefik.http.routers.searx.rule=Host(`search.korhonen.cc`)",
  "traefik.http.routers.searx.service=searx",
  "traefik.http.services.searx.loadbalancer.server.port=8080",
]

[services.searx.logging]
driver = "json-file"

[services.searx.logging.options]
max-size = "1m"
max-file = "1"

[services.redis]
container_name = "redis-searx"
image = "redis:alpine"
command = "redis-server --save \"\" --appendonly \"no\""
networks = ["searx"]
tmpfs = ["/var/lib/redis"]
cap_drop = ["ALL"]
cap_add = ["SETGID", "SETUID", "DAC_OVERRIDE"]

[networks.searx.ipam]
driver = "default"

[networks.proxy]
external = true
