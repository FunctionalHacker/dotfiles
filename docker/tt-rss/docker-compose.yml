version: "3"

services:
  db:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - /docker/tt-rss/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}

  app:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    environment:
      - DB_TYPE=pgsql
      - DB_HOST=db
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - OWNER_UID=${OWNER_UID}
      - OWNER_GID=${OWNER_GID}
      - SELF_URL_PATH=${SELF_URL_PATH}
    volumes:
      - /docker/tt-rss/app:/var/www/html
    depends_on:
      - db

  updater:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    environment:
      - DB_TYPE=pgsql
      - DB_HOST=db
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - OWNER_UID=${OWNER_UID}
      - OWNER_GID=${OWNER_GID}
      - SELF_URL_PATH=${SELF_URL_PATH}
    volumes:
      - /docker/tt-rss/app:/var/www/html
    depends_on:
      - app
    command: /updater.sh

  web:
    image: cthulhoo/ttrss-web
    restart: unless-stopped
    ports:
      - 8280:2015
    volumes:
      - /docker/tt-rss/app:/var/www/html:ro
    depends_on:
      - app
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.tt-rss-redirect.entrypoints=http"
      - "traefik.http.routers.tt-rss-redirect.rule=Host(`rss.reekynet.com`)"
      - "traefik.http.middlewares.http2https.redirectscheme.scheme=https"
      - "traefik.http.routers.tt-rss-redirect.middlewares=http2https"

      - "traefik.http.routers.tt-rss.entrypoints=https"
      - "traefik.http.routers.tt-rss.rule=Host(`rss.reekynet.com`)"
      - "traefik.http.routers.tt-rss.tls=true"
      - "traefik.http.routers.tt-rss.tls.certresolver=http"
      - "traefik.http.routers.tt-rss.service=tt-rss"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.tt-rss.loadbalancer.server.port=8280"
